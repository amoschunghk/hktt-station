<!DOCTYPE html>
<html lang="zh-HK">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>乒乓球學費管理系統</title>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css">
    <style>
        body {
            font-family: Arial, sans-serif;
            max-width: 900px;
            margin: 20px auto;
            padding: 20px;
            background-color: #f5f5f5;
            touch-action: manipulation;
        }
        .container {
            background-color: white;
            padding: 20px;
            border-radius: 10px;
            box-shadow: 0 0 10px rgba(0,0,0,0.1);
        }
        .category-title {
            font-weight: bold;
            margin: 15px 0 5px;
            padding: 5px 10px;
            background-color: #f0f0f0;
            border-radius: 5px;
            color: #333;
        }
        .input-group {
            margin-bottom: 10px;
            display: flex;
            align-items: center;
        }
        .input-group label {
            display: inline-block;
            width: 100px;
        }
        select, input[type="date"], input[type="text"], input[type="number"], input[type="tel"], textarea {
            padding: 8px;
            border-radius: 4px;
            border: 1px solid #ddd;
            margin-right: 10px;
        }
        textarea {
            width: 100%;
            min-height: 60px;
        }
        button {
            padding: 8px 15px;
            background: #3498db;
            color: white;
            border: none;
            border-radius: 4px;
            cursor: pointer;
            margin-right: 10px;
            margin-top: 10px;
        }
        button:hover {
            background: #2980b9;
        }
        .live-preview {
            background: #f8f9fa;
            padding: 15px;
            border-radius: 8px;
            border: 1px solid #ddd;
            white-space: pre-wrap;
            margin-top: 20px;
            line-height: 1.5;
        }
        .time-selector {
            display: flex;
            align-items: center;
            flex-wrap: wrap;
            gap: 10px;
        }
        .session-input-area {
            background: #f0f8ff;
            padding: 15px;
            border-radius: 8px;
            margin-bottom: 20px;
            border: 1px solid #d0e3ff;
        }
        .session-list {
            margin-bottom: 20px;
        }
        .session-card {
            background: #f8f9fa;
            padding: 15px;
            margin: 10px 0;
            border-radius: 8px;
            border: 1px solid #ddd;
            display: flex;
            justify-content: space-between;
            align-items: center;
        }
        .session-info {
            flex-grow: 1;
        }
        .session-type {
            background: #3498db;
            color: white;
            padding: 4px 12px;
            border-radius: 20px;
            font-size: 0.9em;
            display: inline-block;
            margin-right: 10px;
        }
        .private-type { background: #3498db; }
        .group-type { background: #2ecc71; }
        .competition-type { background: #e67e22; }
        .elite-type { background: #9b59b6; }
        .remove-btn {
            color: #e74c3c;
            cursor: pointer;
            margin-left: 10px;
        }
        .payment-guide-btn {
            display: block;
            width: 100%;
            padding: 15px;
            margin-top: 20px;
            background: #ff6b00;
            color: white;
            text-align: center;
            font-size: 1.1em;
            font-weight: bold;
            border: none;
            border-radius: 8px;
            cursor: pointer;
            transition: all 0.3s;
        }
        .payment-guide-btn:hover {
            background: #e05d00;
            transform: scale(1.02);
        }
        .payment-guide-btn i {
            margin-right: 10px;
        }
        .adjustment-section {
            margin-top: 20px;
            padding: 15px;
            background: #fff8e1;
            border-radius: 8px;
            border: 1px solid #ffe0b2;
        }
        .adjustment-list {
            margin-top: 10px;
        }
        .adjustment-item {
            padding: 10px;
            margin-bottom: 10px;
            background: #fff3e0;
            border-radius: 4px;
            border-left: 4px solid #ffa000;
        }
        .edit-text-btn {
            background: #9c27b0;
        }
        .edit-text-btn:hover {
            background: #7b1fa2;
        }
        .clear-preview-btn {
            background: #e74c3c;
        }
        .clear-preview-btn:hover {
            background: #c0392b;
        }
        .payment-link {
            color: #0066cc;
            word-break: break-all;
        }
        .whatsapp-btn {
            background-color: #25D366;
            color: white;
            padding: 12px 24px;
            border: none;
            border-radius: 50px;
            cursor: pointer;
            font-size: 16px;
            display: inline-flex;
            align-items: center;
            width: 100%;
            justify-content: center;
            margin-top: 15px;
        }
        .whatsapp-btn:hover {
            background-color: #128C7E;
        }
        .whatsapp-btn::before {
            content: '';
            display: inline-block;
            width: 24px;
            height: 24px;
            background: url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path fill="white" d="M17.472 14.382c-.297-.149-1.758-.867-2.03-.967-.273-.099-.471-.148-.67.15-.197.297-.767.966-.94 1.164-.173.199-.347.223-.644.075-.297-.15-1.255-.463-2.39-1.475-.883-.788-1.48-1.761-1.653-2.059-.173-.297-.018-.458.13-.606.134-.133.298-.347.446-.52.149-.174.198-.298.298-.497.099-.198.05-.371-.025-.52-.075-.149-.669-1.612-.916-2.207-.242-.579-.487-.5-.669-.51-.173-.008-.371-.01-.57-.01-.198 0-.52.074-.792.372-.272.297-1.04 1.016-1.04 2.479 0 1.462 1.065 2.875 1.213 3.074.149.198 2.096 3.2 5.077 4.487.709.306 1.262.489 1.694.625.712.227 1.36.195 1.871.118.571-.085 1.758-.719 2.006-1.413.248-.694.248-1.289.173-1.413-.074-.124-.272-.198-.57-.347m-5.421 7.403h-.004a9.87 9.87 0 01-5.031-1.378l-.361-.214-3.741.982.998-3.648-.235-.374a9.86 9.86 0 01-1.51-5.26c.001-5.45 4.436-9.884 9.888-9.884 2.64 0 5.122 1.03 6.988 2.898a9.825 9.825 0 012.893 6.994c-.003 5.45-4.437 9.884-9.885 9.884"/></svg>');
            margin-right: 10px;
        }
        .generate-btn {
            background: #4CAF50;
        }
        .generate-btn:hover {
            background: #3e8e41;
        }
        .course-header {
            margin: 15px 0 5px;
            font-weight: bold;
            text-align: center;
            letter-spacing: 1px;
        }
        .step-guide {
            background: #e3f2fd;
            padding: 15px;
            border-radius: 8px;
            margin-bottom: 20px;
            border-left: 4px solid #2196F3;
        }
        .step-title {
            font-weight: bold;
            color: #0d47a1;
            margin-bottom: 8px;
        }
        .step-content {
            margin-left: 10px;
        }
        .calendar-link {
            color: #0066cc;
            text-decoration: none;
            margin-left: 8px;
            font-size: 0.9em;
        }
        .calendar-link:hover {
            text-decoration: underline;
        }
        .calendar-links {
            margin-top: 5px;
        }
        
        @media (max-width: 768px) {
            .input-group {
                flex-direction: column;
                align-items: flex-start;
            }
            .input-group label {
                margin-bottom: 5px;
            }
            .time-selector {
                flex-direction: column;
                align-items: flex-start;
            }
            .button-group {
                display: flex;
                flex-wrap: wrap;
            }
            .button-group button {
                margin-bottom: 10px;
            }
            .session-card {
                flex-direction: column;
                align-items: flex-start;
            }
            .session-actions {
                margin-top: 10px;
                align-self: flex-end;
            }
            .calendar-links {
                display: flex;
                flex-direction: column;
            }
        }
    </style>
</head>
<body>
    <div class="container">
        <h1>乒乓球學費管理系統</h1>
        
        <div class="step-guide">
            <div class="step-title">使用指引：</div>
            <div class="step-content">
                <p>1️⃣ 填寫基本資料 → 2️⃣ 添加課程 → 3️⃣ 計算學費 → 4️⃣ 添加調整（如需要）→ 5️⃣ 生成文案</p>
            </div>
        </div>

        <div class="section">
            <h2>基本資料</h2>
            <div class="step-guide">
                <div class="step-title">第一步：填寫基本資料</div>
                <div class="step-content">
                    <p>請輸入學員姓名和負責教練，這些資料會顯示在學費單上。</p>
                </div>
            </div>
            <div class="input-group">
                <label>學員姓名：</label>
                <input type="text" id="studentName" placeholder="輸入學員姓名">
            </div>
            <div class="input-group">
                <label>負責教練：</label>
                <input type="text" id="coachName" placeholder="輸入教練姓名">
            </div>
        </div>

        <div class="section">
            <h2>課程設置</h2>
            <div class="step-guide">
                <div class="step-title">第二步：添加課程</div>
                <div class="step-content">
                    <p>請選擇課程日期、時間和類型，然後點擊對應的課程類型按鈕添加課程。</p>
                    <p>系統會自動根據不同課程類型計算學費：</p>
                    <ul>
                        <li>私人/專才課程：按小時計算</li>
                        <li>小組班：每堂1.5小時</li>
                        <li>比賽班：每堂2.5小時</li>
                    </ul>
                </div>
            </div>
            <div class="session-input-area">
                <div class="input-group">
                    <label>日期：</label>
                    <input type="date" id="sessionDate">
                </div>
                <div class="input-group">
                    <label>開始時間：</label>
                    <div class="time-selector">
                        <select id="startBlock" onchange="updateTimeOptions('start')">
                            <option value="">選擇時段</option>
                            <option value="morning">上午 (8:00-12:00)</option>
                            <option value="noon">中午 (12:00-15:00)</option>
                            <option value="afternoon">下午 (15:00-22:00)</option>
                        </select>
                        <select id="startTime">
                            <option value="">請先選擇時段</option>
                        </select>
                    </div>
                </div>
                <div class="input-group">
                    <label>結束時間：</label>
                    <div class="time-selector">
                        <select id="endBlock" onchange="updateTimeOptions('end')">
                            <option value="">選擇時段</option>
                            <option value="morning">上午 (8:00-12:00)</option>
                            <option value="noon">中午 (12:00-15:00)</option>
                            <option value="afternoon">下午 (15:00-22:00)</option>
                        </select>
                        <select id="endTime">
                            <option value="">請先選擇時段</option>
                        </select>
                    </div>
                </div>
                <div class="input-group">
                    <label>課程類型：</label>
                    <button onclick="addSession('private')"><i class="fas fa-user"></i> 私人課程</button>
                    <button onclick="addSession('group')"><i class="fas fa-users"></i> 小組班</button>
                    <button onclick="addSession('competition')"><i class="fas fa-trophy"></i> 比賽班</button>
                    <button onclick="addSession('elite')"><i class="fas fa-star"></i> 專才教練</button>
                </div>
            </div>

            <div class="session-list" id="sessionList">
                <h3>已添加課程</h3>
                <div class="step-guide">
                    <div class="step-title">課程列表</div>
                    <div class="step-content">
                        <p>已添加的課程會顯示在這裡，可以點擊「刪除」按鈕移除錯誤的課程。</p>
                    </div>
                </div>
                <div id="allSessions"></div>
            </div>
            
            <button class="generate-btn" onclick="calculateFee()"><i class="fas fa-calculator"></i> 計算學費</button>
        </div>

        <div class="adjustment-section" id="adjustmentSection" style="display:none;">
            <h2>學費調整</h2>
            <div class="step-guide">
                <div class="step-title">第三步：學費調整（可選）</div>
                <div class="step-content">
                    <p>如需調整學費（如優惠、補課等），請在此添加調整項目。</p>
                    <p>正數金額會增加總學費，負數金額會減少總學費。</p>
                </div>
            </div>
            <div class="input-group">
                <label>調整金額：</label>
                <input type="number" id="adjustmentAmount" placeholder="輸入調整金額" step="1" min="-9999" max="9999">
                <span>正數為增加，負數為減少</span>
            </div>
            <div class="input-group">
                <label>調整原因：</label>
                <textarea id="adjustmentReason" placeholder="輸入調整原因（例如：補課、優惠折扣等）"></textarea>
            </div>
            <button onclick="addAdjustment()"><i class="fas fa-plus"></i> 新增調整</button>
            
            <div class="adjustment-list" id="adjustmentList"></div>
            
            <button class="generate-btn" onclick="generatePreview()"><i class="fas fa-file-alt"></i> 生成學費文案</button>
        </div>

        <div class="section" id="previewSection" style="display:none;">
            <div class="step-guide">
                <div class="step-title">第四步：預覽及分享</div>
                <div class="step-content">
                    <p>生成的學費文案會顯示在這裡，您可以：</p>
                    <ul>
                        <li>複製文案到剪貼簿</li>
                        <li>直接發送至WhatsApp</li>
                        <li>編輯文案內容</li>
                        <li>查看繳費流程教學</li>
                        <li>客戶可直接點擊日曆連結添加課程日期</li>
                    </ul>
                </div>
            </div>
            <div id="livePreview" class="live-preview"></div>
            
            <button id="paymentGuideBtn" class="payment-guide-btn" onclick="openPaymentGuide()">
                <i class="fas fa-file-alt"></i> 學費繳付流程教學
            </button>
        </div>

        <div class="section button-group" id="actionSection" style="display:none;">
            <button class="copy-btn" onclick="copyText()"><i class="fas fa-copy"></i> 複製文案</button>
            <button class="whatsapp-btn" onclick="sendWhatsApp()"><i class="fab fa-whatsapp"></i> 發送至WhatsApp</button>
            <button class="edit-text-btn" onclick="editPreviewText()" id="editTextBtn">
                <i class="fas fa-edit"></i> 文案調整
            </button>
            <button class="clear-preview-btn" onclick="clearPreview()" id="clearPreviewBtn">
                <i class="fas fa-trash"></i> 刪除文案
            </button>
        </div>
    </div>

    <script>
        // 課程配置
        const courseConfig = {
            private: { 
                type: '➖➖1️⃣私人單對單課程🏓➖➖', 
                emoji: '🏓', 
                rate: 380,
                unit: '小時',
                calculateByHour: true
            },
            group: { 
                type: '➖➖2️⃣小組班課程🏓➖➖', 
                emoji: '🏓', 
                rate: 315,
                unit: '堂',
                durationPerClass: 1.5,
                calculateByHour: false
            },
            competition: { 
                type: '➖➖3️⃣比賽班課程🏓➖➖', 
                emoji: '🏓', 
                rate: 330,
                unit: '堂',
                durationPerClass: 2.5,
                calculateByHour: false
            },
            elite: { 
                type: '➖➖4️⃣專才教練訓練課程🏓➖➖', 
                emoji: '🏓', 
                rate: 500,
                unit: '小時',
                calculateByHour: true
            }
        };

        // 時間段配置
        const timeBlocks = {
            morning: { start: 8, end: 12, label: '上午 (8:00-12:00)' },
            noon: { start: 12, end: 15, label: '中午 (12:00-15:00)' },
            afternoon: { start: 15, end: 22, label: '下午 (15:00-22:00)' }
        };

        // 更新時間選項
        function updateTimeOptions(type) {
            const blockSelect = document.getElementById(`${type}Block`);
            const timeSelect = document.getElementById(`${type}Time`);
            const block = blockSelect.value;
            
            timeSelect.innerHTML = '<option value="">選擇時間</option>';
            
            if (block && timeBlocks[block]) {
                for (let hour = timeBlocks[block].start; hour < timeBlocks[block].end; hour++) {
                    for (let minute = 0; minute < 60; minute += 15) {
                        const time = `${String(hour).padStart(2, '0')}${String(minute).padStart(2, '0')}`;
                        const displayTime = `${String(hour).padStart(2, '0')}:${String(minute).padStart(2, '0')}`;
                        const option = document.createElement('option');
                        option.value = time;
                        option.textContent = displayTime;
                        timeSelect.appendChild(option);
                    }
                }
            }
        }

        function calculateDuration(start, end) {
            if (!start || !end) return 0;
            
            const startHour = parseInt(start.substring(0, 2));
            const startMinute = parseInt(start.substring(2));
            const endHour = parseInt(end.substring(0, 2));
            const endMinute = parseInt(end.substring(2));
            
            const startTotal = startHour * 60 + startMinute;
            const endTotal = endHour * 60 + endMinute;
            
            return (endTotal - startTotal) / 60; // 轉換為小時
        }

        function formatDate(dateString) {
            if (!dateString) return '';
            const date = new Date(dateString);
            const days = ['日', '一', '二', '三', '四', '五', '六'];
            const dayOfWeek = days[date.getDay()];
            return `${date.getFullYear()}-${String(date.getMonth() + 1).padStart(2, '0')}-${String(date.getDate()).padStart(2, '0')}（週${dayOfWeek}）`;
        }

        function formatTime(timeString) {
            if (!timeString) return '';
            return `${timeString.substring(0, 2)}:${timeString.substring(2)}`;
        }

        function formatDuration(duration) {
            if (duration <= 0) return '0小時';
            
            const hours = Math.floor(duration);
            const minutes = Math.round((duration % 1) * 60);
            
            if (minutes === 0) {
                return `${hours}小時`;
            } else {
                return `${hours}小時${minutes}分鐘`;
            }
        }

        function formatCurrency(amount) {
            return new Intl.NumberFormat('zh-HK', { style: 'currency', currency: 'HKD' }).format(amount)
                .replace('HK$', '$')
                .replace(/(\.\d+)?$/, '');
        }

        function getMonthFromSessions() {
            if (allSessions.length === 0) return new Date().getMonth() + 1;
            
            // 找出最早的課程日期
            let earliestDate = null;
            allSessions.forEach(session => {
                const sessionDate = new Date(session.date);
                if (!earliestDate || sessionDate < earliestDate) {
                    earliestDate = sessionDate;
                }
            });
            
            return earliestDate.getMonth() + 1;
        }

        // 生成添加到日曆的連結 (WhatsApp兼容格式)
        function generateCalendarLinks(date, startTime, endTime, title, description) {
            const start = new Date(`${date}T${startTime.substring(0, 2)}:${startTime.substring(2)}:00`);
            const end = new Date(`${date}T${endTime.substring(0, 2)}:${endTime.substring(2)}:00`);
            
            // 格式化日期時間為YYYYMMDDTHHmmss
            const formatDateTime = (dateObj) => {
                return dateObj.toISOString().replace(/[-:]/g, '').replace('.000Z', '');
            };
            
            // 通用連結 (在WhatsApp中可點擊)
            const universalLink = `https://www.google.com/calendar/render?action=TEMPLATE&text=${encodeURIComponent(title)}&dates=${formatDateTime(start)}/${formatDateTime(end)}&details=${encodeURIComponent(description)}&location=乒乓球訓練場`;
            
            // iOS 專用連結 (在WhatsApp中可點擊)
            const iosLink = `https://www.icloud.com/calendar/event/add?title=${encodeURIComponent(title)}&st=${formatDateTime(start)}&et=${formatDateTime(end)}&desc=${encodeURIComponent(description)}&location=乒乓球訓練場`;
            
            // Outlook 連結 (在WhatsApp中可點擊)
            const outlookLink = `https://outlook.live.com/calendar/0/deeplink/compose?path=/calendar/action/compose&rru=addevent&startdt=${start.toISOString()}&enddt=${end.toISOString()}&subject=${encodeURIComponent(title)}&body=${encodeURIComponent(description)}&location=乒乓球訓練場`;
            
            return {
                universal: universalLink,
                ios: iosLink,
                outlook: outlookLink
            };
        }

        let allSessions = [];
        let currentTotalFee = 0;
        let adjustments = [];
        let originalPreviewText = '';

        function addSession(type) {
            const date = document.getElementById('sessionDate').value;
            const start = document.getElementById('startTime').value;
            const end = document.getElementById('endTime').value;
            
            if (!date) {
                alert('請選擇日期');
                return;
            }
            
            if (!start || !end) {
                alert('請選擇開始和結束時間');
                return;
            }
            
            const duration = calculateDuration(start, end);
            if (duration <= 0) {
                alert('結束時間必須晚於開始時間');
                return;
            }
            
            const sessionId = Date.now();
            const config = courseConfig[type];
            
            const card = document.createElement('div');
            card.className = 'session-card';
            card.setAttribute('data-id', sessionId);
            card.innerHTML = `
                <div class="session-info">
                    <span class="session-type ${type}-type">${config.type}</span>
                    <span>${date} ${formatTime(start)}-${formatTime(end)} (${formatDuration(duration)})</span>
                </div>
                <div class="session-actions">
                    <span class="remove-btn" onclick="removeSession('${sessionId}')">
                        <i class="fas fa-trash"></i> 刪除
                    </span>
                </div>
            `;

            document.getElementById('allSessions').appendChild(card);
            
            allSessions.push({
                id: sessionId,
                type,
                date,
                start,
                end,
                duration
            });
        }

        function removeSession(sessionId) {
            allSessions = allSessions.filter(s => s.id !== sessionId);
            document.querySelector(`.session-card[data-id="${sessionId}"]`)?.remove();
            
            // 如果沒有課程，隱藏學費調整區
            if (allSessions.length === 0) {
                document.getElementById('adjustmentSection').style.display = 'none';
                document.getElementById('previewSection').style.display = 'none';
                document.getElementById('actionSection').style.display = 'none';
            }
        }

        function calculateFee() {
            if (allSessions.length === 0) {
                alert('請先添加課程');
                return;
            }
            
            document.getElementById('adjustmentSection').style.display = 'block';
            document.getElementById('livePreview').textContent = '請新增學費調整（如需要）後點擊「生成學費文案」按鈕';
        }

        function addAdjustment() {
            const amount = parseFloat(document.getElementById('adjustmentAmount').value);
            const reason = document.getElementById('adjustmentReason').value.trim();
            
            if (isNaN(amount)) {
                alert('請輸入有效的調整金額');
                return;
            }
            
            if (!reason) {
                alert('請輸入調整原因');
                return;
            }
            
            const adjustmentId = Date.now();
            adjustments.push({
                id: adjustmentId,
                amount,
                reason
            });
            
            // 更新調整列表顯示
            updateAdjustmentList();
            
            // 清空輸入框
            document.getElementById('adjustmentAmount').value = '';
            document.getElementById('adjustmentReason').value = '';
        }

        function updateAdjustmentList() {
            const listContainer = document.getElementById('adjustmentList');
            listContainer.innerHTML = '';
            
            if (adjustments.length === 0) {
                listContainer.innerHTML = '<p>暫無學費調整記錄</p>';
                return;
            }
            
            adjustments.forEach((adj, index) => {
                const adjItem = document.createElement('div');
                adjItem.className = 'adjustment-item';
                adjItem.innerHTML = `
                    <strong>調整 #${index + 1}:</strong> ${adj.amount > 0 ? '+' : ''}${adj.amount}元
                    <div>原因: ${adj.reason}</div>
                    <div style="text-align:right;margin-top:5px;">
                        <span class="remove-btn" onclick="removeAdjustment('${adj.id}')">
                            <i class="fas fa-trash"></i> 刪除
                        </span>
                    </div>
                `;
                listContainer.appendChild(adjItem);
            });
        }

        function removeAdjustment(adjustmentId) {
            adjustments = adjustments.filter(a => a.id !== adjustmentId);
            updateAdjustmentList();
        }

        function clearPreview() {
            if(confirm('確定要清除當前生成的文案嗎？清除後可重新生成新文案。')) {
                document.getElementById('livePreview').textContent = '請先新增課程，然後點擊「生成學費文案」按鈕';
                document.getElementById('paymentGuideBtn').style.display = 'none';
                document.getElementById('previewSection').style.display = 'none';
                document.getElementById('actionSection').style.display = 'none';
            }
        }

        function generatePreview() {
            const studentName = document.getElementById('studentName').value;
            const coachName = document.getElementById('coachName').value;
            const currentMonth = getMonthFromSessions();
            
            // 按課程類型分類
            const sessionsByType = {
                private: [],
                group: [],
                competition: [],
                elite: []
            };
            
            allSessions.forEach(session => {
                if (session.date && session.start && session.end && session.duration > 0) {
                    sessionsByType[session.type].push(session);
                }
            });
            
            let previewText = `【${currentMonth}月-乒乓球學費計算及繳付方法】\n\n`;
            previewText += `學員姓名：${studentName || '未填寫'}\n`;
            previewText += `負責教練：${coachName || '未填寫'}\n\n`;
            
            currentTotalFee = 0;
            let hasValidSessions = false;
            
            // 處理每種課程類型
            Object.keys(sessionsByType).forEach(type => {
                const sessions = sessionsByType[type];
                const config = courseConfig[type];
                
                if (sessions.length > 0) {
                    hasValidSessions = true;
                    
                    previewText += `${config.type}\n`;
                    previewText += `日期：\n`;
                    
                    let typeTotal = 0;
                    let unitCount = 0;
                    
                    sessions.forEach(session => {
                        const dateStr = formatDate(session.date);
                        const timeRange = `${formatTime(session.start)}-${formatTime(session.end)}`;
                        const durationText = formatDuration(session.duration);
                        
                        // 生成日曆連結
                        const title = `${studentName || '學員'}的乒乓球課程 (${config.type.replace(/➖➖|🏓/g, '').trim()})`;
                        const description = `教練: ${coachName || '未指定'}\n課程類型: ${config.type.replace(/➖➖|🏓/g, '').trim()}\n學員: ${studentName || '未填寫'}`;
                        const calendarLinks = generateCalendarLinks(session.date, session.start, session.end, title, description);
                        
                        previewText += `${dateStr}（${timeRange}）【${durationText}】\n`;
                        previewText += `添加到日曆: ${calendarLinks.universal}\n`;
                        previewText += `(iOS用戶: ${calendarLinks.ios})\n`;
                        previewText += `(Outlook用戶: ${calendarLinks.outlook})\n\n`;
                        
                        if (config.calculateByHour) {
                            // 私人課程和專才教練課程按小時計算
                            const fee = session.duration * config.rate;
                            typeTotal += fee;
                            unitCount += session.duration;
                        } else {
                            // 小組班和比賽班課程按堂數計算
                            const classes = session.duration / config.durationPerClass;
                            const fee = Math.ceil(classes) * config.rate;
                            typeTotal += fee;
                            unitCount += Math.ceil(classes);
                        }
                    });
                    
                    previewText += `學費標準：\n${formatCurrency(config.rate)}/${config.unit}\n\n`;
                    previewText += `${config.type.replace('➖➖', '').replace('➖➖', '')}學費單計：\n`;
                    
                    // 格式化金額顯示
                    const formattedTotal = formatCurrency(typeTotal);
                    
                    previewText += `${formattedTotal}【${unitCount}${config.unit}】\n\n`;
                    
                    currentTotalFee += typeTotal;
                }
            });
            
            if (!hasValidSessions && adjustments.length === 0) {
                previewText = "請先新增並填寫完整的課程資料（包括日期、開始時間和結束時間）";
                document.getElementById('paymentGuideBtn').style.display = 'none';
            } else {
                // 計算調整總額
                let adjustmentTotal = 0;
                let adjustmentText = '';
                
                if (adjustments.length > 0) {
                    adjustmentText += '\n學費調整記錄：\n';
                    
                    adjustments.forEach((adj, index) => {
                        adjustmentTotal += adj.amount;
                        adjustmentText += `調整 #${index + 1}: ${adj.amount > 0 ? '+' : ''}${formatCurrency(adj.amount)} (原因: ${adj.reason})\n`;
                    });
                    
                    adjustmentText += `\n學費調整總計: ${adjustmentTotal > 0 ? '+' : ''}${formatCurrency(adjustmentTotal)}\n`;
                }
                
                // 計算最終總金額
                const finalTotal = currentTotalFee + adjustmentTotal;
                
                previewText += `🟰🟰${currentMonth}月學費總計🟰🟰\n`;
                previewText += `課程學費: ${formatCurrency(currentTotalFee)}\n`;
                
                if (adjustments.length > 0) {
                    previewText += adjustmentText;
                    previewText += `\n最終應付總額: ${formatCurrency(finalTotal)}\n`;
                } else {
                    previewText += `最終應付總額: ${formatCurrency(finalTotal)}\n`;
                }
                
                // 加入固定繳費流程內容
                previewText += `\n學費繳付流程（請參照《學費繳付流程圖》之內容）\n`;
                previewText += `https://drive.google.com/file/d/1lUeRvGwwLvZ9R1R5j-7wkmLUSZLdeTPE/view?usp=drivesdk\n`;
                
                // 顯示預覽區和操作按鈕
                document.getElementById('previewSection').style.display = 'block';
                document.getElementById('actionSection').style.display = 'block';
                
                // 保存原始文案
                originalPreviewText = previewText;
            }
            
            document.getElementById('livePreview').textContent = previewText;
        }

        function editPreviewText() {
            const currentText = document.getElementById('livePreview').textContent;
            const newText = prompt("請編輯文案內容：", currentText);
            
            if (newText !== null) {
                document.getElementById('livePreview').textContent = newText;
                originalPreviewText = newText;
            }
        }

        function openPaymentGuide() {
            window.open('https://drive.google.com/file/d/1lUeRvGwwLvZ9R1R5j-7wkmLUSZLdeTPE/view?usp=drivesdk', '_blank');
        }

        function copyText() {
            const text = document.getElementById('livePreview').textContent;
            navigator.clipboard.writeText(text).then(() => {
                alert('文案已複製到剪貼簿');
            });
        }

        function sendWhatsApp() {
            const text = encodeURIComponent(document.getElementById('livePreview').textContent);
            window.open(`https://api.whatsapp.com/send?text=${text}`);
        }

        // 初始化頁面
        document.addEventListener('DOMContentLoaded', function() {
            // 初始化時間選項
            updateTimeOptions('start');
            updateTimeOptions('end');
            
            // 設置默認日期為今天
            const now = new Date();
            document.getElementById('sessionDate').value = now.toISOString().split('T')[0];
        });
    </script>
</body>
</html>